rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    match /{document=**} {
      allow read, write: if false;
    }

    match /users/{userDocRef} {
      allow create: if docIdEqualsDocRef(userDocRef) &&
        hasFields([
          'id',
          'email',
          'displayName',
          'emojiAvatar',
          'photoURL',
          'createdAt',
          'createdCakes',
          'languagePreference'
        ]);

      allow read: if isSignedIn() &&
        isDocumentOwner(userDocRef);

      allow update: if isSignedIn() &&
        isDocumentOwner(userDocRef) &&
        hasUnchangedFields(['id', 'email', 'createdAt']);

      allow delete: if isSignedIn() &&
        isDocumentOwner(userDocRef);
  	}

    match /cakes/{cakeDocRef} {
    	allow create: if isSignedIn() &&
      	docIdEqualsDocRef(cakeDocRef) &&
      	isDocumentOwner(request.resource.data.createdBy.id) &&
        hasFields([
          'id',
          'title',
          'description',
          'createdBy',
          'images',
          'createdAt',
          'ratings',
          'ratingSummary'
        ]);

      allow read: if isSignedIn();

      allow update: if isSignedIn() &&
        (
          isDocumentOwner(resource.data.createdBy.id) ||
          hasOnlyAffectedFields(['ratings', 'ratingSummary'])
        ) &&
        hasUnchangedFields(['id', 'createdBy', 'createdAt']);

      allow delete: if isSignedIn() &&
        isDocumentOwner(resource.data.createdBy.id);
  	}
	}

  function isSignedIn() {
    return request.auth != null && request.auth.token.firebase.sign_in_provider != "anonymous";
  }

  function docIdEqualsDocRef(docRef) {
    return request.resource.data.id == docRef;
  }

  function isDocumentOwner(ownerId) {
    return request.auth.uid == ownerId;
  }

  function hasFields(list) {
    return request.resource.data.keys().hasAll(list);
  }

  function hasUnchangedFields(list) {
    return request.resource.data.diff(resource.data).unchangedKeys().hasAll(list);
  }

  function hasOnlyAffectedFields(list) {
    return request.resource.data.diff(resource.data).affectedKeys() == list.toSet();
  }
}
